name: Build Docker image

on:
    schedule:
        # run every month
        - cron: "* * 1 * *"
    push:
        branches: master
        tags:
            - v*

env:
    DOCKER_IMAGE: mammo0/docker-webdav
    DOCKER_PLATFORMS: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/386,linux/ppc64le,linux/s390x
    DOCKER_CACHE: /tmp/.buildx-cache

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Check scheduled release
              if: github.event_name == 'schedule'
              run: |
                  # checkout the latest release
                  git fetch --tags --all
                  git checkout $(git tag --list 'v*' --sort=v:refname |tail -1)

            - name: Prepare environment
              id: prepare
              run: |
                  # if it's a scheduled release, only re-build the latest release
                  if [ "${{ github.event_name }}" = "schedule" ]; then
                      TAGS="--tag ${DOCKER_IMAGE}:latest"
                  else
                      # edge version, built on every push
                      TAGS="--tag ${DOCKER_IMAGE}:edge"

                      # if a release is made, build also 'latest' and the version
                      if [[ $GITHUB_REF == refs/tags/v* ]]; then
                          TAGS="$TAGS --tag ${DOCKER_IMAGE}:latest"
                          TAGS="$TAGS --tag ${DOCKER_IMAGE}:${GITHUB_REF#refs/tags/}"
                      fi
                  fi

                  echo ::set-output name=buildx_args::--platform ${DOCKER_PLATFORMS} \
                      --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
                      ${TAGS} \
                      --file Dockerfile .

            - name: Set up caching
              uses: actions/cache@v2
              id: cache
              with:
                  path: ${{ env.DOCKER_CACHE }}
                  key: ${{ runner.os }}-buildx-${{ github.sha }}
                  restore-keys: ${{ runner.os }}-buildx-
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v1
              with:
                  platforms: ${{ env.DOCKER_PLATFORMS }}
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v1
              with:
                  version: latest
                  install: true

            - name: Buid
              run: |
                  docker build \
                      --cache-from "type=local,src=${DOCKER_CACHE}" \
                      --cache-to "type=local,dest=${DOCKER_CACHE}" \
                      --output "type=image,push=false" \
                      ${{ steps.prepare.outputs.buildx_args }}

            - name: Login to DockerHub
              if: success()
              uses: docker/login-action@v1
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_TOKEN }}

            - name: Push
              if: success()
              run: |
                  docker build \
                      --cache-from "type=local,src=${DOCKER_CACHE}" \
                      --output "type=image,push=true" \
                      ${{ steps.prepare.outputs.buildx_args }}
